# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# Make up arrow auto complete use the text currently typed in search for past commands.
# tty=$(tty); [[ $tty != "not a tty" ]] && bind '"\e[A":history-search-backward' && bind '"\e[B":history-search-forward'

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

#OS=$(cat /etc/os-release | grep ^NAME | tr -d 'NAME="')
#VERSION=$(cat /etc/os-release | grep ^VERSION= | tr -d 'VERSION="')
#OS=${OS// /-}
#VERSION=${VERSION// /-}

if [ -f /etc/os-release ]; then
    . /etc/os-release
    OS_NAME=${NAME// /-}
    VER=${VERSION_ID// /-}
    if [ -z ${VER} ]; then
        OS=$OS_NAME
    else
        OS="$OS_NAME-$VER"
    fi
else
    OS="$(uname -s)"
fi

MACHINE="$(uname -m)"

SH=""
if [ ${ZSH_VERSION} ]; then
    SH="zsh"
elif [ ${BASH_VERSION} ]; then
    SH="bash"
fi

color_prompt=yes
if docker ps &> /dev/null; then
    PS1='\[\033[00;01;32m\]${debian_chroot:+($debian_chroot)}\[\033[00;01;32m\]\u'
    PS1='$PS1\[\033[0;1m\]-\[\033[01;35m\]\h'
    PS1='$PS1\[\033[0;1m\]-\[\033[0;36m\]$MACHINE\[\033[0;1m\]:\[\033[00;01;31m\]$OS\[\033[0;01m\]-\[\033[01;35m\]$SH\[\033[00;01m\]:\[\033[00;34m\]\w\[\033[00;01m\]\$\[\033[00m\] '
else
        PS1='\[\033[00;01;32m\]${debian_chroot:+($debian_chroot)}\[\033[00;01;32m\]DOCKER'
        PS1='$PS1\[\033[0;1m\]-\[\033[01;35m\]\h'
        PS1='$PS1\[\033[0;1m\]-\[\033[0;36m\]$MACHINE\[\033[0;1m\]:\[\033[00;01;31m\]$OS\[\033[0;01m\]-\[\033[01;35m\]$SH\[\033[00;01m\]:\[\033[00;34m\]\w\[\033[00;01m\]\$\[\033[00m\] '
fi
unset color_prompt force_color_prompt

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
else
    alias ls='ls -G'
    GREP_OPTIONS='--color=always'
    GREP_COLOR='1;35;40'
fi


# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
set -o monitor

# some more ls aliases
alias ll='ls -lFh'
alias la='ls -Al'
alias l='ls -CF'
alias reset="reset && printf '\e[3J'"
alias bdf="df -k"
alias gk="gitk --all"
alias gb="git btranch -a"
alias gs="git status"
alias gcm="git commit -m"
alias gch="git checkout"
alias gl="git log"
alias h="fc -l"

alias fp='fprime-util'
alias fpp='yes | fprime-util purge'
alias fpg='fprime-util generate'
alias fpb='fprime-util build'
alias fpr='yes | fprime-util purge && fprime-util generate && fprime-util build'
 
export PATH=~/.local/bin:$PATH
export EDITOR="vim"
export VISUAL="vim"

# Alias definitions.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
